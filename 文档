				      外卖派单模拟系统
一、	程序框架设计：
 
二、文件的定义
 

Step1.tools.h
1、设置窗口大小函数
2、光标定位函数（用于打印房屋，骑手）
3、颜色控制函数（用于突出地图上骑手的出发点）
Step2.point.h
1、打印一个房屋图案函数  ！！！
2、打印一个骑手图案函数
3、清除输出功能函数（用于消灭上一时间骑手的图案）
4、改变位置函数（贪吃蛇中有该函数）
Step3.map.h
1、	打印地图函数（需用到point与tools的头文件）
Step4.rider.h（重要）
1、	定义结构体数组（有多个骑手，rider[i]=I,没有则rider[i]=0）rider
包括：
a.	int x;//骑手当前位置横坐标
b.	int y;//骑手当前位置纵坐标
c.	int x1;//骑手接餐地址横坐标
d.	int y1;//骑手接餐地址纵坐标
e.	int x2;//骑手送餐地址横坐标
f.	int y2;//骑手送餐地址纵坐标
g.	int t1 //骑手这一单截止时间
h.	创建链表存储骑手的任务队列（链表中每个单元的结构包含一个点的坐标）
i.	创建链表存储骑手的行驶路线（链表中每个单元的结构包含一个点的坐标）。//创建链表函数单独写
j.	骑手的接单数
k.	骑手的完成数
l.	骑手的超时数
m.	骑手完成该队列订单所用的时间
n.	如若需要圈定骑手的运动范围，也可将骑手的运动范围添加在结构体里。
2、	给骑手派新任务的函数。
//较简单，将坐标添加到骑手的任务队列即可。
3、	骑手行驶路径的算法函数（计算出行驶路径存储在骑手结构体的行驶路线中）
a.	计算出最短路径
b.	改变骑手结构体中的行驶路线//有可能只需要在原路径上加长，也有可能会销毁原来路径，产生一条新的路径。（难）
4、	骑手完成当前任务队列中所需的时间timerider(就是数组或链表的长度)//不太清楚这个是否必要
5、	判断骑手是否会超时的函数。（判断是否大于30，return 1或0）//始终感觉这个有点问题
6、	打印每位骑手的接单数、完成数、超时数的函数。
//为破产考虑，若破产则需用到此函数
Step5.message.h
1、	定义结构体//为了存储需要显示在屏幕上的信息
struct{
当前钱数 money
每位骑手的位置
接单数
完成数
超时数
}
2、打印信息的函数（用到tools.h与point.h）。
Step6.controller.h
1、“判断当前是否破产”函数
  // 若破产执行rider文件中的函数6

2、判断哪位骑手接单的函数
包括：判断是用现有骑手接还是新雇佣骑手接单。
a.	若现有骑手接单是否要改变其运动范围。
b.	若要新骑手接则添加新骑手
//就今天讨论的结果这里只需暴力计算找出每位骑手的耗
时，让路径最短的骑手接之后传入rider文件中的函数进行
操作。


3、控制骑手移动的函数
a.	判断出骑手下一刻的坐标 //通过访问rider的数组或链表的当前位置的下一个位置
b.	删去骑手原来时刻的图案，在新坐标下打印骑手图案
